// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Yusuf.Zerdazi.Web.Data;
using Yusuf.Zerdazi.Web.Models;

namespace Yusuf.Zerdazi.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20171105124623_AddedPiecesSet")]
    partial class AddedPiecesSet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Yusuf.Zerdazi.Web.Models.Everyday", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int?>("MonthID");

                    b.HasKey("ID");

                    b.HasIndex("MonthID");

                    b.ToTable("Everydays");
                });

            modelBuilder.Entity("Yusuf.Zerdazi.Web.Models.Month", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Start");

                    b.HasKey("ID");

                    b.ToTable("Months");
                });

            modelBuilder.Entity("Yusuf.Zerdazi.Web.Models.Piece", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EverydayID");

                    b.Property<int?>("SourceID");

                    b.Property<int?>("ThemeID");

                    b.Property<string>("Title");

                    b.Property<string>("URL");

                    b.HasKey("ID");

                    b.HasIndex("EverydayID");

                    b.HasIndex("SourceID");

                    b.HasIndex("ThemeID");

                    b.ToTable("Pieces");
                });

            modelBuilder.Entity("Yusuf.Zerdazi.Web.Models.Theme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Medium");

                    b.Property<int?>("MonthID");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("MonthID");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("Yusuf.Zerdazi.Web.Models.Everyday", b =>
                {
                    b.HasOne("Yusuf.Zerdazi.Web.Models.Month", "Month")
                        .WithMany()
                        .HasForeignKey("MonthID");
                });

            modelBuilder.Entity("Yusuf.Zerdazi.Web.Models.Piece", b =>
                {
                    b.HasOne("Yusuf.Zerdazi.Web.Models.Everyday")
                        .WithMany("Pieces")
                        .HasForeignKey("EverydayID");

                    b.HasOne("Yusuf.Zerdazi.Web.Models.Piece", "Source")
                        .WithMany()
                        .HasForeignKey("SourceID");

                    b.HasOne("Yusuf.Zerdazi.Web.Models.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeID");
                });

            modelBuilder.Entity("Yusuf.Zerdazi.Web.Models.Theme", b =>
                {
                    b.HasOne("Yusuf.Zerdazi.Web.Models.Month")
                        .WithMany("Themes")
                        .HasForeignKey("MonthID");
                });
#pragma warning restore 612, 618
        }
    }
}
