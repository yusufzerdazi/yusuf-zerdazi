@model Yusuf.Zerdazi.Web.ViewModels.EverydayUpload

@{
    ViewData["Title-Image"] = "everydays";
    ViewData["Title"] = "Upload Everyday";
}

@section Styles {
    <link href="@Url.Content("~/css/everydays.css")" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker.css" integrity="sha256-I/m6FhcACNYmRoqn1xUnizh6S7jOJsTq+aiJ6BtE2LE=" crossorigin="anonymous" />
}

<div class="section__title"><h1>@ViewData["Title"]</h1></div>

<form asp-action="upload" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="col-6">
        <div class="form-group">
            <label asp-for="Date" class="control-label" hidden></label>
            <input placeholder="Date" asp-for="Date" class="form-control" type="date" />
            <span asp-validation-for="Date" class="text-danger"></span>
        </div>
    </div>
    <div class="pieces row">
        @for (var i = 0; i < Model.Files.Count; i++)
        {
        <div class="piece col-6">
            <div class="form-group">
                <input placeholder="@Html.DisplayNameFor(model => model.Files[i].Title)" asp-for="Files[i].Title" type="text" class="form-control" />
                <span asp-validation-for="Files[i].Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Files[i].File" class="form-control">
                    @Html.DisplayNameFor(model => model.Files[i].File) <input asp-for="Files[i].File" type="file" onchange="addText(this)" hidden />
                </label>
                <span asp-validation-for="Files[i].File" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input placeholder="Source @Html.DisplayNameFor(model => model.Files[i].Source.Title)" asp-for="Files[i].Source.Title" type="text" class="form-control" />
                <span asp-validation-for="Files[i].Source.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Files[i].Source.File" class="form-control">
                    Source @Html.DisplayNameFor(model => model.Files[i].Source.File)<input asp-for="Files[i].Source.File" type="file" onchange="addText(this)" hidden />
                </label>
                <span asp-validation-for="Files[i].Source.File" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input placeholder="Source @Html.DisplayNameFor(model => model.Files[i].Source.URL)" asp-for="Files[i].Source.URL" type="text" class="form-control" />
                <span asp-validation-for="Files[i].Source.URL" class="text-danger"></span>
            </div>
            <div class="form-group">
                <select placeholder="@Html.DisplayNameFor(model => model.Files[i].Theme)" asp-for="Files[i].Theme.ID" asp-items="@ViewBag.Themes" class="form-control"></select>
                <span asp-validation-for="Files[i].Theme" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button class="btn btn-danger remove-piece" data-toggle="tooltip" title="Remove Set" style="display:none"><span class="far fa-minus"></span></button>
            </div>
        </div>
        }
    </div>
    <div class="col-12">
        <div class="form-group">
            <button type="button" class="add-piece btn btn-success"><span class="far fa-plus"></span></button>
            <input type="submit" value="Create" class="btn btn-primary" />
            <a class="btn btn-warning" href="https://yusuf.zerdazi.com/everydays/">Back to List</a>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            var wrapper = $('.pieces');

            $(".add-piece").click(function(e) {
                e.preventDefault();
            
                $('.pieces').children().first().clone(true).appendTo(wrapper);

                $('.remove-piece').show();

                renameFields();
            });

            $('.remove-piece').click(function (e) {
                e.preventDefault();
                $(this).parents('.piece').remove();
                if ($('.pieces').children().length == 1) {
                    $('.remove-piece').hide();
                }
                renameFields();
            });

            function renameFields() {
                $('.pieces').children().each(function (i, value) {
                    recurseRename(value, i);
                });
            }

            function recurseRename(element, i) {
                $(element).children().each(function (index, data) {
                    if ($(data).children().length > 0) {
                        console.log(data);
                        recurseRename(data, i);
                    }
                    var id = $(data).prop("id");
                    var name = $(data).prop("name");
                    var validation = $(data).prop("data-val-msg-for");
                    var labelFor = $(data).prop("for");
                
                    if (id) {
                        $(data).prop("id", id.replace(/\d/, i));
                    }
                    if (name) {
                        $(data).prop("name", name.replace(/\d/, i));
                    }
                    if (validation) {
                        $(data).prop("data-val-msg-for", validation.replace(/\d/, i));
                    }
                    if (labelFor) {
                        $(data).prop("for", labelFor.replace(/\d/, i));
                    }
                });
            }
        });

        function addText(element) {
            console.log($(element).parent().contents());
            $(element).parent().contents()[0].remove();
            $(element).parent().prepend(element.files[0].name);
        }
    </script>
}
