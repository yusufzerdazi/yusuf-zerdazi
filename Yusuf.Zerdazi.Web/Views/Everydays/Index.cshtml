@model Yusuf.Zerdazi.Web.ViewModels.EverydaysViewModel
@{
    ViewData["Title"] = "Everydays";
    ViewData["Title-Image"] = "everydays";
    var CurrentDate = DateTime.Now.Date;
    var MaxDone = Model.Everydays.FirstOrDefault().Date;
    var done = 0;
    var small = false;
}
@section Styles {
    <link href="@Url.Content("~/css/everydays.css")" rel="stylesheet" />
}
<div class="row">
    @foreach (var month in Model.Months.Where(x => Model.Everydays.Where(y => y.Month.Start.Month == x.Start.Month).Count() > 0))
    {
        done++;
        if (!small) { small = done > 1; }
        <div class='@Html.Raw(small ? "col-lg-6 col-6" : "col-12")' style='padding:0;'>
            <section class="container">
                <div class="section__title">
                    <h1>@Html.Raw(month.Start.ToString((small ? "MMM" : "MMMM") + " yyyy"))</h1>
                    <h2>@Html.Raw(String.Join(" and ", month.Themes.Select(x => x.Title)))</h2>
                </div>

                <div class="section__content">
                    <div class="row text-center text-lg-left">
                        @while (CurrentDate > MaxDone && CurrentDate > month.Start.AddDays(-1))
                        {
                            <div class="everyday col-lg-2 col-md-3 col-sm-4 col-6">
                                <div class="text-container col-12">
                                    <a href="/everydays/upload?date=@(CurrentDate.ToString("yyyy-MM-dd"))" class="mb-4 h-100 empty" style="margin-bottom:0px">
                                        <img class="img-fluid" src="~/images/blank.jpg" alt="">
                                    </a>
                                    <span class="bottom-right"><i style="margin-right:10px; color: grey" class="far fa-fw fa-music"></i><i style="color: grey" class="far fa-fw fa-image"></i></span>
                                </div>
                            </div>
                            CurrentDate = CurrentDate.AddDays(-1);
                        }

                        @foreach (var everyday in Model.Everydays.Where(x => x.Month == month))
                        {
                            @foreach (var piece in everyday.Pieces)
                            {
                                if (piece.Theme.Medium == Medium.Image || piece.Theme.Medium == Medium.Video)
                                {
                                    <div class="@Html.Raw(small ? "small-everyday" : "everyday") col-lg-2 col-md-3 col-sm-4 col-6">
                                        <div class="@Html.Raw(small ? "small-everyday" : "") text-container col-12">
                                            @{
                                                var imageUrl = "";
                                                var embedUrl = "";

                                                
                                                switch (piece.Theme.Medium)
                                                {
                                                    case Medium.Image:
                                                        embedUrl = piece.URL + "?width=1000&height=1000&id=" + everyday.ID;
                                                        imageUrl = piece.URL + "?width=275&height=275&cropmode=center";
                                                        break;
                                                    case Medium.Video:
                                                        embedUrl = piece.URL;
                                                        imageUrl = $"https://img.youtube.com/vi/{piece.URL.Split("?v=").Last()}/maxresdefault.jpg";
                                                        break;
                                                }
                                            }
                                            <a data-fancybox="gallery" href="@(embedUrl)" class="mb-4 h-100" data-caption="@Html.Raw(everyday.Pieces.Single(x => x.Theme.Medium == Medium.Image || x.Theme.Medium == Medium.Video).Title)">
                                                <img class="img-fluid" src="@(imageUrl)" alt="">
                                            </a>
                                            <span class="bottom-right">
                                                @foreach (var p in everyday.Pieces.OrderByDescending(x => x.Theme.Medium))
                                                {
                                                    var icon = "";
                                                    switch (p.Theme.Medium)
                                                    {
                                                        case Medium.Image:
                                                            icon = "fa-image";
                                                            break;
                                                        case Medium.Video:
                                                            icon = "fa-video";
                                                            break;
                                                        case Medium.Sound:
                                                            icon = "fa-music";
                                                            break;
                                                    }
                                                    if (p.Source != null && p.Source.URL != null)
                                                    {
                                                        @Html.Raw("<a href='" + p.Source.URL + "'>")
                                                    }
                                                    <i title="@Html.Raw(p.Source != null ? p.Source.Title : "")" style="color: @Html.Raw(p.Source == null ? "white" : "grey")" class="popper far fa-fw @(icon)"></i>
                                                    if (p.Source != null)
                                                    {
                                                        @Html.Raw("</a>")
                                                    }
                                                }
                                            </span>
                                        </div>
                                    </div>
                                }
                                else if (piece.Theme.Medium == Medium.Sound)
                                {
                                    <input style="display:none" id="@(everyday.ID)" value="@(piece.URL)" />
                                    }
                                }
                            }
                    </div>
                </div>
            </section>
        </div>
        }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(".empty").click(function (e) {
            e.preventDefault();
            if (window.location.hostname.indexOf("localhost") != -1) {
                window.location.href = "https://yusufzerdazi.azurewebsites.net" + $(this).attr("href");
            }
        });
    </script>
}
